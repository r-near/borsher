// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`complex nested structures > game state example 1`] = `
{
  "data": [
    1,
    0,
    0,
    0,
    7,
    0,
    0,
    0,
    112,
    108,
    97,
    121,
    101,
    114,
    49,
    100,
    0,
    0,
    0,
    2,
    0,
    0,
    0,
    5,
    0,
    0,
    0,
    115,
    119,
    111,
    114,
    100,
    1,
    0,
    6,
    0,
    0,
    0,
    112,
    111,
    116,
    105,
    111,
    110,
    5,
    0,
    0,
  ],
  "type": "Buffer",
}
`;

exports[`complex types > Enum > Error variant 1`] = `
{
  "data": [
    1,
    20,
    0,
    0,
    0,
    115,
    111,
    109,
    101,
    116,
    104,
    105,
    110,
    103,
    32,
    119,
    101,
    110,
    116,
    32,
    119,
    114,
    111,
    110,
    103,
  ],
  "type": "Buffer",
}
`;

exports[`complex types > Enum > Success variant 1`] = `
{
  "data": [
    0,
    10,
    0,
    0,
    0,
    105,
    116,
    32,
    119,
    111,
    114,
    107,
    101,
    100,
    33,
  ],
  "type": "Buffer",
}
`;

exports[`complex types > HashMap 1`] = `
{
  "data": [
    2,
    0,
    0,
    0,
    5,
    0,
    0,
    0,
    97,
    108,
    105,
    99,
    101,
    100,
    0,
    0,
    0,
    3,
    0,
    0,
    0,
    98,
    111,
    98,
    200,
    0,
    0,
    0,
  ],
  "type": "Buffer",
}
`;

exports[`complex types > Option > None value 1`] = `
{
  "data": [
    0,
  ],
  "type": "Buffer",
}
`;

exports[`complex types > Option > Some value 1`] = `
{
  "data": [
    1,
    5,
    0,
    0,
    0,
    104,
    101,
    108,
    108,
    111,
  ],
  "type": "Buffer",
}
`;

exports[`complex types > Struct 1`] = `
{
  "data": [
    5,
    0,
    0,
    0,
    97,
    108,
    105,
    99,
    101,
    25,
    3,
    0,
    0,
    0,
    100,
    0,
    95,
    0,
    98,
    0,
  ],
  "type": "Buffer",
}
`;

exports[`complex types > Vec 1`] = `
{
  "data": [
    5,
    0,
    0,
    0,
    1,
    2,
    3,
    4,
    5,
  ],
  "type": "Buffer",
}
`;

exports[`primitive types > bool > false serialization 1`] = `
{
  "data": [
    0,
  ],
  "type": "Buffer",
}
`;

exports[`primitive types > bool > true serialization 1`] = `
{
  "data": [
    1,
  ],
  "type": "Buffer",
}
`;

exports[`primitive types > numbers 1`] = `
{
  "data": [
    255,
  ],
  "type": "Buffer",
}
`;

exports[`primitive types > numbers 2`] = `
{
  "data": [
    255,
    255,
  ],
  "type": "Buffer",
}
`;

exports[`primitive types > numbers 3`] = `
{
  "data": [
    255,
    255,
    255,
    255,
  ],
  "type": "Buffer",
}
`;

exports[`primitive types > numbers 4`] = `
{
  "data": [
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
  ],
  "type": "Buffer",
}
`;

exports[`primitive types > numbers 5`] = `
{
  "data": [
    128,
  ],
  "type": "Buffer",
}
`;

exports[`primitive types > numbers 6`] = `
{
  "data": [
    0,
    128,
  ],
  "type": "Buffer",
}
`;

exports[`primitive types > numbers 7`] = `
{
  "data": [
    0,
    0,
    0,
    128,
  ],
  "type": "Buffer",
}
`;

exports[`primitive types > numbers 8`] = `
{
  "data": [
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    128,
  ],
  "type": "Buffer",
}
`;

exports[`primitive types > string serialization 1`] = `
{
  "data": [
    11,
    0,
    0,
    0,
    104,
    101,
    108,
    108,
    111,
    32,
    119,
    111,
    114,
    108,
    100,
  ],
  "type": "Buffer",
}
`;
